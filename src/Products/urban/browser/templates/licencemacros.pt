<div metal:define-macro="urbanFolderManagerMacro" i18n:domain="urban" tal:define="folderManagers here/getFoldermanagers">
 <tal:loop repeat="folderManager folderManagers" tal:condition="folderManagers">
   <span tal:content="folderManager/Title">Treating agent name</span><br />
 </tal:loop>
 <span tal:condition="not: folderManagers" class="discreet" i18n:translate="content_none">None</span>
</div>


<div metal:define-macro="urbanArchitectsMacro" i18n:domain="urban" tal:define="architects here/getArchitects">
<tal:loop repeat="architect architects" tal:condition="architects">
<div class="#" tal:define="oddrow repeat/architect/odd;" tal:attributes="class python: oddrow and 'even' or 'odd'">
  <a href="#" tal:attributes="href python: architect.absolute_url() + '?came_from_licence_uid=' + context.UID()">
   <span tal:replace="python: architect.getPersonTitle(short=True)" />
   <span tal:replace="architect/getName1|nothing" />
   <span tal:replace="architect/getName2|nothing" />
   <span tal:condition="architect/getSociety" tal:replace="python: '(' + architect.getSociety() + ')'" />
  </a>
 <br />
 <span tal:content="python: architect.getStreet()+' '+architect.getNumber()" /><br />
 <span tal:content="python: architect.getZipcode()+' '+architect.getCity()" /><br />
</div>
</tal:loop>
</div>


<div metal:define-macro="urbanGeometriciansMacro" i18n:domain="urban" tal:define="geometricians here/getGeometricians">
<tal:loop repeat="geometrician geometricians" tal:condition="geometricians">
<div class="#" tal:define="oddrow repeat/geometrician/odd;" tal:attributes="class python: oddrow and 'even' or 'odd'">
  <a href="#" tal:attributes="href python: geometrician.absolute_url() + '?came_from_licence_uid=' + context.UID()">
   <span tal:replace="python: geometrician.getPersonTitle(short=True)" />
   <span tal:replace="geometrician/getName1|nothing" />
   <span tal:replace="geometrician/getName2|nothing" />
   <span tal:condition="geometrician/getSociety" tal:replace="python: '(' + geometrician.getSociety() + ')'" />
  </a>
 <span tal:content="python: geometrician.getStreet()+' '+geometrician.getNumber()" /><br />
 <span tal:content="python: geometrician.getZipcode()+' '+geometrician.getCity()" /><br />
</div>
</tal:loop>
</div>


<div metal:define-macro="urbanNotariesMacro" i18n:domain="urban" tal:define="notaries here/getNotaryContact">
<tal:loop repeat="notary notaries">
<div class="#" tal:define="oddrow repeat/notary/odd;" tal:attributes="class python: oddrow and 'even' or 'odd'">
  <a href="#" tal:attributes="href python: notary.absolute_url() + '?came_from_licence_uid=' + context.UID()">
     <span tal:replace="python: notary.getPersonTitle(short=True)" />
     <span tal:replace="notary/getName1|nothing" />
     <span tal:replace="notary/getName2|nothing" />
     <span tal:condition="notary/getSociety" tal:replace="notary/getSociety|nothing" />
  </a>
 <br />
 <span tal:content="python: notary.getStreet()+' '+notary.getNumber()" /><br />
 <span tal:content="python: notary.getZipcode()+' '+notary.getCity()" /><br />
</div>
</tal:loop>
</div>


<metal:applicants define-macro="urbanApplicantsMacro" i18n:domain="urban">
 <div class="#" tal:define="applicants context/getApplicants"
                tal:attributes="class python: applicants and 'field' or 'field warning'">
  <p tal:condition="not: applicants" i18n:translate="warning_add_an_applicant">
   You must encode applicant(s)
  </p>
  <div>
   <tal:listing content="structure view/renderContactListing" />
  </div>
  <form tal:define="ctype python: context.portal_types.getTypeInfo('Applicant');
                    member context/@@plone_portal_state/member;"
        tal:condition="python: member.has_permission('urban: Add Contact', context)"
        tal:attributes="action python: context.absolute_url() + '/createObject'"
        i18n:domain="urban" name="quickAdd"  action="createObject" method="post">
  <input type="hidden" name="type_name" value="#" tal:attributes="value ctype/id" />
  <input type="submit" class="urbanButton contenttype-applicant button-applicant" id="add-applicant" value="add_an_applicant" i18n:attributes="value" />
  </form>
 </div>
</metal:applicants>


<metal:proprietaries define-macro="urbanProprietariesMacro" i18n:domain="urban">
 <div class="#" tal:define="proprietaries context/getProprietaries"
                tal:attributes="class python: proprietaries and 'field' or 'field warning'">
  <p tal:condition="not: proprietaries" i18n:translate="warning_add_a_proprietary">
   You must encode proprietary(ies)
  </p>
  <div>
   <tal:listing content="structure view/renderContactListing" />
  </div>
  <form tal:define="ctype python: context.portal_types.getTypeInfo('Proprietary');
                    member context/@@plone_portal_state/member;"
        tal:condition="python: member.has_permission('urban: Add Contact', context)"
        tal:attributes="action python: context.absolute_url() + '/createObject'"
        i18n:domain="urban" name="quickAdd"  action="createObject" method="post">
  <input type="hidden" name="type_name" value="#" tal:attributes="value ctype/id" />
  <input type="submit" class="urbanButton contenttype-proprietary button-proprietary" id="add-proprietary" value="add_a_proprietary" i18n:attributes="value" />
  </form>
 </div>
</metal:proprietaries>


<div metal:define-macro="urbanEventsMacro" i18n:domain="urban">
 <table cellspacing=0 cellpadding=0 width=100%>
 <tr>
  <td tal:define="eventTypes view/getUrbanEventTypes">
   <form action="createUrbanEvent" method="POST"
         tal:condition="view/canAddUrbanEvent">
    <input type='hidden' name="urban_folder_uid" tal:attributes="value here/UID" value=''>
    <select name="urban_event_type_uid">
     <tal:loopEventType repeat="eventType eventTypes">
      <option tal:attributes="value eventType/UID" value='' tal:content="eventType/Title">
      </option>
     </tal:loopEventType>
    </select>
    <input class="urbanButton contenttype-urbanevent button-urbanevent" type="submit" i18n:attributes="value" value="Add an event">
   </form>
   <p class="discreet" tal:condition="not: eventTypes" i18n:translate="urban_no_eventtype_defined">No event type is defined in the configuration for this element</p>
   <br />
  </td>
 </tr>
 <tr>
  <td>
    <div>
     <tal:listing content="structure view/renderEventsListing" />
    </div>
  </td>
 </tr>
 </table>
</div>


<div metal:define-macro="urbanAdvicesEventsMacro" i18n:domain="urban">
 <div tal:condition="view/canAddAllAdvices" >
 <fieldset><legend i18n:translate="folder_advice">Folder advices</legend>
  <table cellspacing=0 cellpadding=0 width=100%>
  <tr>
   <td>
    <form action="createAllAdvices" method="POST">
     <input class="urbanButton contenttype-urbanevent button-urbanevent" type="submit" i18n:attributes="value" value="Add all advices">
    </form>
    <div class="discreet">
     <span i18n:translate="add_every_advices_descr">This will automatically generate following advices:</span>&nbsp;
     <span tal:content="view/getAdviceTitles" />
    </div>
   </td>
  </tr>
  </table>
 </fieldset>
 </div>
</div>


<metal:editLicenceMacro define-macro="editLicenceMacro" i18n:domain="urban" tal:define="useTabbing python: context.portal_urban.getUrbanConfig(context).getUseTabbingForEdit();">
   <div tal:condition="not: useTabbing">
       <metal:listing use-macro="here/@@licencemacros/editLicenceFieldsNoTabbingMacro" />
   </div>

   <tal:with_tabbing condition="useTabbing">
       <metal:listing use-macro="here/@@licencemacros/editLicenceFieldsWithTabbingMacro" />
   </tal:with_tabbing>
</metal:editLicenceMacro>


<metal:editLicenceFieldsWithTabbingMacro define-macro="editLicenceFieldsWithTabbingMacro"
                                         i18n:domain="urban"
                                         tal:define="putils context/plone_utils;
                                                     tabs_config context/getTabs">
<tal:fieldsets repeat="tab_config tabs_config">
 <tal:tab define="fieldset python: 'urban_%s' % tab_config['value'];
                  display_name python: tab_config['display_name']">
  <fieldset class="urbanEditWithTabbing" tal:define="fieldsetid python:putils.normalizeString(fieldset)"
          tal:attributes="id string:fieldset-${fieldsetid}">
    <legend id="#"
            tal:content="display_name"
            tal:attributes="id string:fieldsetlegend-${fieldsetid}"
            i18n:translate="" />
      <metal:listing use-macro="here/@@licencemacros/editLicenceFieldsMacro" />
  </fieldset>
 </tal:tab>
</tal:fieldsets>
</metal:editLicenceFieldsWithTabbingMacro>


<div metal:define-macro="editLicenceFieldsMacro" i18n:domain="urban">
 <tal:fields repeat="field python:schematas[fieldset].editableFields(here, visible_only=True)">
  <tal:block define="fieldName field/getName">

   <tal:comment replace="nothing">Display a fieldset around the 'isInPca' and 'Pca' fields</tal:comment>
   <tal:pca condition="python: fieldName in ['isInPCA', 'pca',]">
    <tal:comment replace="nothing">We do the entire job manually when the field is 'isInPca' and there is nothing left to do when it is the 'Pca' field</tal:comment>
    <tal:manage_pca condition="python: fieldName == 'isInPCA'">
     <fieldset class="urban-fieldset-masterbooleanwidget" style="border-style: solid !important;">
      <legend i18n:translate="pca_fieldset_legend">PCA</legend>
      <metal:fieldMacro use-macro="python:here.widget('isInPCA', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('pca', mode='edit')" />
     </fieldset>
    </tal:manage_pca>
   </tal:pca>

   <tal:comment replace="nothing">Display a fieldset around the 'isInSubdivision' and 'subdivisionDetails' fields</tal:comment>
   <tal:subdivision condition="python: fieldName in ['isInSubdivision', 'parcellings', 'subdivisionDetails',]">
    <tal:comment replace="nothing">We do the entire job manually when the field is 'isInSubdivision' and there is nothing left to do when it is the 'subdivisionDetails' field</tal:comment>
    <tal:manage_subdivision condition="python: fieldName == 'isInSubdivision'">
     <fieldset class="urban-fieldset-masterbooleanwidget" style="border-style: solid !important;">
      <legend i18n:translate="subdivision_fieldset_legend">Subdivision</legend>
      <metal:fieldMacro use-macro="python:here.widget('isInSubdivision', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('parcellings', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('subdivisionDetails', mode='edit')" />
     </fieldset>
    </tal:manage_subdivision>
    </tal:subdivision>

   <tal:other condition="not: python: fieldName in ['isInPCA', 'pca', 'isInSubdivision', 'parcellings', 'subdivisionDetails',]">
    <metal:fieldMacro use-macro="python:here.widget(field.getName(), mode='edit')" />
   </tal:other>
 </tal:block>
 </tal:fields>
</div>


<div metal:define-macro="editLicenceFieldsNoTabbingMacro"
     tal:define="putils context/plone_utils;
                 tabs_config context/getTabs">
<tal:fieldsets repeat="tab_config tabs_config">
 <tal:tab define="fieldset python: 'urban_%s' % tab_config['value'];
                  display_name python: tab_config['display_name']">
  <fieldset tal:define="fieldsetid python:putils.normalizeString(fieldset)">
    <legend tal:content="display_name"
            tal:attributes="id string:fieldsetlegend-${fieldsetid}"
            i18n:translate="" />
      <metal:listing use-macro="here/@@licencemacros/editLicenceFieldsMacro" />
  </fieldset>
 </tal:tab>
</tal:fieldsets>
</div>


<div metal:define-macro="investigation_and_advices_macro" i18n:domain="urban"
     tal:define="ctype python: context.portal_types.getTypeInfo('Inquiry');
                 inquiries view/getInquiriesForDisplay;
                 member context/@@plone_portal_state/member;">
<fieldset tal:repeat="inquiry inquiries"><legend><span class="contenttype-inquiry" i18n:translate="inquiry_title_and_number">Inquiry <span i18n:name="number" tal:content="repeat/inquiry/number"></span></span></legend>
<tal:comment replace="nothing">Do not show the actions on the Licence object representing the first inquiry, only on following ones wich are real Inquiry objects</tal:comment>
<tal:actions condition="python: not repeatindex == 0" define="repeatindex repeat/inquiry/index">

<div metal:define-macro="urbanActionsMacro" i18n:domain="urban"
           tal:define="member context/@@plone_portal_state/member;
           actionsToHide actionsToHide|python:()">

  <div align="right">
      <!-- Edit action -->
      <tal:edit_action condition="python: member.has_permission('Modify portal content', inquiry)">
        <a class="noPadding" tal:attributes="href python: inquiry.absolute_url() + '/edit'">
          <img src="#" tal:attributes="src string:${portal_url}/edit.gif" title="label_edit" i18n:attributes="title" />
        </a>
      </tal:edit_action>

      <!-- Own management of the "delete" action -->
      <tal:delete_action condition="python: member.has_permission('Delete objects', inquiry)">

        <a class="urbanDelete noPadding"
           tal:attributes="href python: inquiry.absolute_url() + '/delete_confirmation'">
            <!-- Icon -->
            <img src="#" tal:attributes="src string:${portal_url}/delete_icon.gif" i18n:attributes="title" title="label_remove"
                 onClick="javascript:confirmDeleteObject(this)" style="cursor:pointer"/>
        </a>
      </tal:delete_action>
  </div>
</div>


</tal:actions>
<table class="no-style-table">
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_derogation">Derogations</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('derogation', mode='view')" /></td>
 </tr>
 <tr tal:condition="python: context.attributeIsUsed('derogationDetails')">
  <td valign="top"><b><span i18n:translate="urban_label_derogationDetails">Derogations details</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><tal:block replace="structure inquiry/getDerogationDetails" /><span tal:condition="not: inquiry/getDerogationDetails" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationArticles">Investigation articles</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationArticles', mode='view')" /></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationStart">from</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationStart', mode='view')" /><span tal:condition="not: inquiry/getInvestigationStart" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationEnd">to</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationEnd', mode='view')" /><span tal:condition="not: inquiry/getInvestigationEnd" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr tal:condition="python: context.attributeIsUsed('investigationDetails')">
  <td valign="top"><b><span i18n:translate="urban_label_investigationDetails">Investigation details</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><tal:block replace="structure inquiry/getInvestigationDetails" /><span tal:condition="not: inquiry/getInvestigationDetails" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr tal:condition="python: context.attributeIsUsed('investigationReasons')">
  <td valign="top"><b><span i18n:translate="urban_label_investigationReasons">Investigation reasons</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><tal:block replace="structure inquiry/getInvestigationReasons" /><span tal:condition="not: inquiry/getInvestigationReasons" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_solicitOpinionsTo">Solicit opinion to</span>:</b></td>
  <td width="2%"></td>
  <td tal:define="opinionIds inquiry/getSolicitOpinionsTo" style="padding-top: 1em;">
    <table tal:condition="opinionIds" cellspacing="0" cellpadding="0" width="100%" class="listing">
     <thead>
      <tr>
       <th i18n:translate="urban_label_requestedOrganisation">Organisation</th>
       <th i18n:translate="urban_label_eventDate">Date</th>
       <th i18n:translate="urban_label_receiptDate">Receipt date</th>
       <th i18n:translate="urban_label_adviceAgreementLevel">Advice agreement level</th>
      </tr>
     </thead>
     <tbody tal:define="tool python: context.portal_urban">
     <tr tal:repeat="opinionId opinionIds">
      <tal:block define="opinion python: inquiry.getLinkedUrbanEventOpinionRequest(opinionId)">
       <tal:anEventIsLinked condition="python: opinion is not None">
        <td><a href="#" tal:attributes="href opinion/absolute_url" tal:content="python: inquiry.getSolicitOpinionValue(opinionId)">Opinion request</a></td>
        <td tal:define="eventDate opinion/getEventDate"><span class="#" tal:attributes="class python: eventDate and 'plain' or 'discreet'" tal:content="python: eventDate and tool.formatDate(eventDate, translatemonth=False) or 'content_none'" i18n:translate="">None</span></td>
        <td tal:define="receiptDate opinion/getReceiptDate"><span class="#" tal:attributes="class python: receiptDate and 'plain' or 'discreet'" tal:content="python: receiptDate and tool.formatDate(receiptDate, translatemonth=False) or 'content_none'" i18n:translate="">None</span></td>
        <td tal:define="adviceAgreementLevel opinion/getAdviceAgreementLevel"><span class="#" tal:attributes="class python: adviceAgreementLevel and 'plain' or 'discreet'" tal:content="python: adviceAgreementLevel and adviceAgreementLevel or 'content_none'" i18n:translate="">None</span></td>
       </tal:anEventIsLinked>
       <tal:noEventIsLinked condition="python: opinion is None">
        <td tal:content="python: inquiry.getSolicitOpinionValue(opinionId)">Opinion request</td>
        <td><span class="discreet" i18n:translate="content_none">None</span></td>
        <td><span class="discreet" i18n:translate="content_none">None</span></td>
        <td><span class="discreet" i18n:translate="content_none">None</span></td>
       </tal:noEventIsLinked>
      </tal:block>
     </tr>
     </tbody>
    </table>
  </td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationOralReclamationNumber">Number of oral reclamations</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationOralReclamationNumber', mode='view')" /></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationWriteReclamationNumber">Number of write reclamations</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationWriteReclamationNumber', mode='view')" /></td>
 </tr>
 <tal:comment replace="nothing">Link to the UrbanEventInquiry if exists</tal:comment>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_linked_urbaneventinquiry">Linked urban event inquiry</span>:</b></td>
  <td width="2%"></td>
  <td valign="top" tal:define="linkedUrbanEventInquiry python: inquiry.getLinkedUrbanEventInquiry();">
   <a tal:condition="python: linkedUrbanEventInquiry" href="#" tal:attributes="href python:linkedUrbanEventInquiry.absolute_url()" i18n:translate="urban_link_to_the_linked_urbaneventinquiry">Click here to access the linked urban event inquiry</a>
   <span tal:condition="python: not linkedUrbanEventInquiry" class="discreet" i18n:translate="content_no_urbaneventinquiry">There is no UrbanEventInquiry linked to this inquiry</span>
  </td>
 </tr>
</table>
</fieldset>
<br />
<form tal:condition="python: member.has_permission('urban: Add Inquiry', context)" i18n:domain="urban" name="quickAdd" tal:attributes="action python: context.absolute_url() + '/createObject'" action="createObject" method="post">
 <input type="hidden" name="type_name" value="#" tal:attributes="value ctype/id" />
 <input type="submit" class="contenttype-inquiry button-inquiry" id="event" value="add_an_inquiry" i18n:attributes="value" />
</form>
</div>


