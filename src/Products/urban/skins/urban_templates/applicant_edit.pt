<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      lang="en-US"
      i18n:domain="urban">

<body>
<div metal:define-macro="body">

<metal:base_body use-macro="base_macros/body">

<metal:widgets fill-slot="widgets"
           tal:define="global body_onload string: init();
                       member context/@@plone_portal_state/member; 
                       border python: test(member.has_role('Manager'), 'enable_border', 'disable_border');
                       dummy python:request.set(border, 1);
                       useTabbing python: context.portal_urban.getUseTabbing();
                       putils context/plone_utils">

 <tal:comment replace="nothing">This edit form is only used by the Applicant portal_type, others use the base_edit</tal:comment>

 <div tal:define="adressFields python: ['isSameAddressAsWorks', 'street', 'number', 'zipcode', 'city', 'country', ]">
 <tal:fields repeat="field python:schematas[fieldset].editableFields(here, visible_only=True)">
  <tal:block define="fieldName field/getName">
   <tal:comment replace="nothing">Display a fieldset around the adress fields</tal:comment>
   <tal:address condition="python: fieldName in adressFields">
    <tal:comment replace="nothing">We do the entire job manually when the field is 'isSameAddressAsWorks' and there is nothing left to do when it is the 'Pca' field</tal:comment>
    <tal:manage_address condition="python: fieldName == 'isSameAddressAsWorks'">
     <fieldset class="urban-fieldset-masterbooleanwidget" style="border-style: solid !important;">
      <legend i18n:translate="address_fieldset_legend">Address</legend>
      <metal:fieldMacro use-macro="python:here.widget('isSameAddressAsWorks', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('street', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('number', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('zipcode', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('city', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('country', mode='edit')" />
     </fieldset>
    </tal:manage_address>
   </tal:address>

   <tal:other condition="not: python: fieldName in adressFields">
    <metal:fieldMacro use-macro="python:here.widget(field.getName(), mode='edit')" />
   </tal:other>
  </tal:block>
 </tal:fields>
 </div>

</metal:widgets>
</metal:base_body>
</div>

</body>
</html>
