<div metal:define-macro="goBackToTheLicenceMacro" i18n:domain="urban">
<br />
<a class="no_underline" href="#"
   tal:define="tool python: context.portal_urban"
   tal:attributes="href python: context.portal_type in tool.getUrbanTypes() and context.absolute_url() or context.aq_inner.aq_parent.absolute_url()"><img src="goback.png" />&nbsp;<span i18n:translate="back_to_licence">Go back to the licence</span></a>
</div>

<div metal:define-macro="urbanInquiriesMacro" i18n:domain="urban"
     tal:define="ctype python: context.portal_types.getTypeInfo('Inquiry');
                 inquiries view/getInquiriesForDisplay;
                 member context/@@plone_portal_state/member;">
<fieldset tal:repeat="inquiry inquiries"><legend><span class="contenttype-inquiry" i18n:translate="inquiry_title_and_number">Inquiry <span i18n:name="number" tal:content="repeat/inquiry/number"></span></span></legend>
<tal:comment replace="nothing">Do not show the actions on the Licence object representing the first inquiry, only on following ones wich are real Inquiry objects</tal:comment>
<tal:actions condition="python: not repeatindex == 0" define="repeatindex repeat/inquiry/index;
                                  thisObject python: inquiry;
                                  needExternalEdition python:False;
                                  actionsToHide python: ('transitions',);">
     <span metal:use-macro="here/urban_macros/macros/urbanActionsMacro" />
</tal:actions>
<table class="no-style-table">
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_derogation">Derogations</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('derogation', mode='view')" /></td>
 </tr>
 <tr tal:condition="python: context.attributeIsUsed('derogationDetails')">
  <td valign="top"><b><span i18n:translate="urban_label_derogationDetails">Derogations details</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><tal:block replace="structure inquiry/getDerogationDetails" /><span tal:condition="not: inquiry/getDerogationDetails" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationArticles">Investigation articles</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationArticles', mode='view')" /></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationStart">from</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationStart', mode='view')" /><span tal:condition="not: inquiry/getInvestigationStart" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationEnd">to</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationEnd', mode='view')" /><span tal:condition="not: inquiry/getInvestigationEnd" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr tal:condition="python: context.attributeIsUsed('investigationDetails')">
  <td valign="top"><b><span i18n:translate="urban_label_investigationDetails">Investigation details</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><tal:block replace="structure inquiry/getInvestigationDetails" /><span tal:condition="not: inquiry/getInvestigationDetails" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr tal:condition="python: context.attributeIsUsed('investigationReasons')">
  <td valign="top"><b><span i18n:translate="urban_label_investigationReasons">Investigation reasons</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><tal:block replace="structure inquiry/getInvestigationReasons" /><span tal:condition="not: inquiry/getInvestigationReasons" class="discreet" i18n:translate="content_none">None</span></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_solicitOpinionsTo">Solicit opinion to</span>:</b></td>
  <td width="2%"></td>
  <td tal:define="opinionIds inquiry/getSolicitOpinionsTo" style="padding-top: 1em;">
    <table tal:condition="opinionIds" cellspacing="0" cellpadding="0" width="100%" class="listing">
     <thead>
      <tr>
       <th i18n:translate="urban_label_requestedOrganisation">Organisation</th>
       <th i18n:translate="urban_label_eventDate">Date</th>
       <th i18n:translate="urban_label_receiptDate">Receipt date</th>
       <th i18n:translate="urban_label_adviceAgreementLevel">Advice agreement level</th>
      </tr>
     </thead>
     <tbody tal:define="tool python: context.portal_urban">
     <tr tal:repeat="opinionId opinionIds">
      <tal:block define="opinion python: inquiry.getLinkedUrbanEventOpinionRequest(opinionId)">
       <tal:anEventIsLinked condition="python: opinion is not None">
        <td><a href="#" tal:attributes="href opinion/absolute_url" tal:content="python: inquiry.getSolicitOpinionValue(opinionId)">Opinion request</a></td>
        <td tal:define="eventDate opinion/getEventDate"><span class="#" tal:attributes="class python: eventDate and 'plain' or 'discreet'" tal:content="python: eventDate and tool.formatDate(eventDate, translatemonth=False) or 'content_none'" i18n:translate="">None</span></td>
        <td tal:define="receiptDate opinion/getReceiptDate"><span class="#" tal:attributes="class python: receiptDate and 'plain' or 'discreet'" tal:content="python: receiptDate and tool.formatDate(receiptDate, translatemonth=False) or 'content_none'" i18n:translate="">None</span></td>
        <td tal:define="adviceAgreementLevel opinion/getAdviceAgreementLevel"><span class="#" tal:attributes="class python: adviceAgreementLevel and 'plain' or 'discreet'" tal:content="python: adviceAgreementLevel and adviceAgreementLevel or 'content_none'" i18n:translate="">None</span></td>
       </tal:anEventIsLinked>
       <tal:noEventIsLinked condition="python: opinion is None">
        <td tal:content="python: inquiry.getSolicitOpinionValue(opinionId)">Opinion request</td>
        <td><span class="discreet" i18n:translate="content_none">None</span></td>
        <td><span class="discreet" i18n:translate="content_none">None</span></td>
        <td><span class="discreet" i18n:translate="content_none">None</span></td>
       </tal:noEventIsLinked>
      </tal:block>
     </tr>
     </tbody>
    </table>
  </td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationOralReclamationNumber">Number of oral reclamations</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationOralReclamationNumber', mode='view')" /></td>
 </tr>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_label_investigationWriteReclamationNumber">Number of write reclamations</span>:</b></td>
  <td width="2%"></td>
  <td valign="top"><metal:myfield use-macro="python:inquiry.widget('investigationWriteReclamationNumber', mode='view')" /></td>
 </tr>
 <tal:comment replace="nothing">Link to the UrbanEventInquiry if exists</tal:comment>
 <tr>
  <td valign="top"><b><span i18n:translate="urban_linked_urbaneventinquiry">Linked urban event inquiry</span>:</b></td>
  <td width="2%"></td>
  <td valign="top" tal:define="linkedUrbanEventInquiry python: inquiry.getLinkedUrbanEventInquiry();">
   <a tal:condition="python: linkedUrbanEventInquiry" href="#" tal:attributes="href python:linkedUrbanEventInquiry.absolute_url()" i18n:translate="urban_link_to_the_linked_urbaneventinquiry">Click here to access the linked urban event inquiry</a>
   <span tal:condition="python: not linkedUrbanEventInquiry" class="discreet" i18n:translate="content_no_urbaneventinquiry">There is no UrbanEventInquiry linked to this inquiry</span>
  </td>
 </tr>
</table>
</fieldset>
<br />
<form tal:condition="python: member.has_permission('urban: Add Inquiry', context)" i18n:domain="urban" name="quickAdd" tal:attributes="action python: context.absolute_url() + '/createObject'" action="createObject" method="post">
 <input type="hidden" name="type_name" value="#" tal:attributes="value ctype/id" />
 <input type="submit" class="contenttype-inquiry button-inquiry" id="event" value="add_an_inquiry" i18n:attributes="value" />
</form>
</div>

<div metal:define-macro="urbanFolderManagerMacro" i18n:domain="urban" tal:define="folderManagers here/getFoldermanagers">
 <tal:loop repeat="folderManager folderManagers" tal:condition="folderManagers">
   <span tal:content="folderManager/Title">Treating agent name</span><br />
 </tal:loop>
 <span tal:condition="not: folderManagers" class="discreet" i18n:translate="content_none">None</span>
</div>

<div metal:define-macro="urbanArchitectsMacro" i18n:domain="urban" tal:define="architects here/getArchitects">
<tal:loop repeat="architect architects" tal:condition="architects">
<div class="#" tal:define="oddrow repeat/architect/odd;" tal:attributes="class python: oddrow and 'even' or 'odd'">
  <a href="#" tal:attributes="href python: architect.absolute_url() + '?came_from_licence_uid=' + context.UID()">
   <span tal:replace="python: architect.getPersonTitle(short=True)" />
   <span tal:replace="architect/getName1|nothing" />
   <span tal:replace="architect/getName2|nothing" />
   <span tal:condition="architect/getSociety" tal:replace="python: '(' + architect.getSociety() + ')'" />
  </a>
 <br />
 <span tal:content="python: architect.getStreet()+' '+architect.getNumber()" /><br />
 <span tal:content="python: architect.getZipcode()+' '+architect.getCity()" /><br />
</div>
</tal:loop>
</div>

<div metal:define-macro="urbanGeometriciansMacro" i18n:domain="urban" tal:define="geometricians here/getGeometricians">
<tal:loop repeat="geometrician geometricians" tal:condition="geometricians">
<div class="#" tal:define="oddrow repeat/geometrician/odd;" tal:attributes="class python: oddrow and 'even' or 'odd'">
  <a href="#" tal:attributes="href python: geometrician.absolute_url() + '?came_from_licence_uid=' + context.UID()">
   <span tal:replace="python: geometrician.getPersonTitle(short=True)" />
   <span tal:replace="geometrician/getName1|nothing" />
   <span tal:replace="geometrician/getName2|nothing" />
   <span tal:condition="geometrician/getSociety" tal:replace="python: '(' + geometrician.getSociety() + ')'" />
  </a>
 <span tal:content="python: geometrician.getStreet()+' '+geometrician.getNumber()" /><br />
 <span tal:content="python: geometrician.getZipcode()+' '+geometrician.getCity()" /><br />
</div>
</tal:loop>
</div>

<div metal:define-macro="urbanNotariesMacro" i18n:domain="urban" tal:define="notaries here/getNotaryContact">
<tal:loop repeat="notary notaries">
<div class="#" tal:define="oddrow repeat/notary/odd;" tal:attributes="class python: oddrow and 'even' or 'odd'">
  <a href="#" tal:attributes="href python: notary.absolute_url() + '?came_from_licence_uid=' + context.UID()">
     <span tal:replace="python: notary.getPersonTitle(short=True)" />
     <span tal:replace="notary/getName1|nothing" />
     <span tal:replace="notary/getName2|nothing" />
     <span tal:condition="notary/getSociety" tal:replace="notary/getSociety|nothing" />
  </a>
 <br />
 <span tal:content="python: notary.getStreet()+' '+notary.getNumber()" /><br />
 <span tal:content="python: notary.getZipcode()+' '+notary.getCity()" /><br />
</div>
</tal:loop>
</div>

<metal:applicants define-macro="urbanApplicantsMacro" i18n:domain="urban">
 <div class="#" tal:define="applicants context/getApplicants"
                tal:attributes="class python: applicants and 'field' or 'field warning'">
  <p tal:condition="not: applicants" i18n:translate="warning_add_an_applicant">
   You must encode applicant(s)
  </p>
  <div tal:define="Batch python:modules['Products.CMFPlone'].Batch;
                   b_start request/b_start|python:0;
                   batch python: Batch(applicants, 20, b_start);
                   showedCols python: ('Title', );
                   colsLabels python: {'Title': 'applicant_data'};
                   showActions python: True;">
   <metal:listing use-macro="here/urban_macros/macros/listing" />
  </div>
  <form tal:define="ctype python: context.portal_types.getTypeInfo('Applicant');
                    member context/@@plone_portal_state/member;"
        tal:condition="python: member.has_permission('urban: Add Contact', context)"
        tal:attributes="action python: context.absolute_url() + '/createObject'"
        i18n:domain="urban" name="quickAdd"  action="createObject" method="post">
  <input type="hidden" name="type_name" value="#" tal:attributes="value ctype/id" />
  <input type="submit" class="urbanButton contenttype-applicant button-applicant" id="add-applicant" value="add_an_applicant" i18n:attributes="value" />
  </form>
 </div>
</metal:applicants>

<metal:proprietaries define-macro="urbanProprietariesMacro" i18n:domain="urban">
 <div class="#" tal:define="proprietaries context/getProprietaries"
                tal:attributes="class python: proprietaries and 'field' or 'field warning'">
  <p tal:condition="not: proprietaries" i18n:translate="warning_add_a_proprietary">
   You must encode proprietary(ies)
  </p>
  <div tal:define="Batch python:modules['Products.CMFPlone'].Batch;
                   b_start request/b_start|python:0;
                   batch python: Batch(proprietaries, 20, b_start);
                   showedCols python: ('Title', );
                   colsLabels python: {'Title': 'proprietary_data'};
                   showActions python: True;">
   <metal:listing use-macro="here/urban_macros/macros/listing" />
  </div>
  <form tal:define="ctype python: context.portal_types.getTypeInfo('Proprietary');
                    member context/@@plone_portal_state/member;"
        tal:condition="python: member.has_permission('urban: Add Contact', context)"
        tal:attributes="action python: context.absolute_url() + '/createObject'"
        i18n:domain="urban" name="quickAdd"  action="createObject" method="post">
  <input type="hidden" name="type_name" value="#" tal:attributes="value ctype/id" />
  <input type="submit" class="urbanButton contenttype-proprietary button-proprietary" id="add-proprietary" value="add_a_proprietary" i18n:attributes="value" />
  </form>
 </div>
</metal:proprietaries>

<div metal:define-macro="urbanEventsMacro" i18n:domain="urban" tal:define="eventTypes python:context.portal_urban.listEventTypes(context, urbanConfigId=context.portal_type.lower())">
 <table cellspacing=0 cellpadding=0 width=100%>
 <tr>
  <td>
   <form action="createUrbanEvent" method="POST"
         tal:define="member context/@@plone_portal_state/member;"
         tal:condition="python: member.has_permission('urban: Add UrbanEvent', context) and eventTypes">
    <input type='hidden' name="urban_folder_uid" tal:attributes="value here/UID" value=''>
    <select name="urban_event_type_uid">
     <tal:loopEventType repeat="eventType eventTypes">
      <option tal:attributes="value eventType/UID" value='' tal:content="eventType/Title">
      </option>
     </tal:loopEventType>
    </select>
    <input class="urbanButton contenttype-urbanevent button-urbanevent" type="submit" i18n:attributes="value" value="Add an event">
   </form>
   <p class="discreet" tal:condition="not: eventTypes" i18n:translate="urban_no_eventtype_defined">No event type is defined in the configuration for this element</p>
   <br />
  </td>
 </tr>
 <tr>
  <td>
    <div tal:define="tool python: context.portal_urban;
                     batch python: tool.queryCatalog(batch=True, specificSearch='searchUrbanEvents', context=context, theObjects=False, batchlen=50);
                     showedCols python: ('Title', 'eventDate', );
                     showActions python: True;">
     <metal:listing use-macro="here/urban_macros/macros/listing" />
    </div>
  </td>
 </tr>
 </table>
</div>

<div metal:define-macro="urbanAdvicesEventsMacro" i18n:domain="urban">
 <div tal:define="allAdvices context/getAllAdvices;
                  member context/@@plone_portal_state/member;
                  mayAddUrbanEvent python: member.has_permission('urban: Add UrbanEvent', context);"
      tal:condition="python: allAdvices and mayAddUrbanEvent" >
 <fieldset><strong><legend i18n:translate="folder_advice">Folder advices</legend></strong>
  <table cellspacing=0 cellpadding=0 width=100%>
  <tr>
   <td>
    <form action="createAllAdvices" method="POST">
     <input class="urbanButton contenttype-urbanevent button-urbanevent" type="submit" i18n:attributes="value" value="Add all advices">
    </form>
    <div class="discreet">
     <span i18n:translate="add_every_advices_descr">This will automatically generate following advices:</span>&nbsp;
     <span tal:content="python: ', '.join([advice.Title() for advice in allAdvices])" />
    </div>
   </td>
  </tr>
  </table>
 </fieldset>
 </div>
</div>

<tal:comment replace="nothing">
Requires defined element "thisObject" as an object and
can receive a "actionsToHide" list of actions not to display</tal:comment>
<div metal:define-macro="urbanActionsMacro" i18n:domain="urban"
           tal:define="member context/@@plone_portal_state/member;
           actionsToHide actionsToHide|python:()">

  <!-- actions panel -->

  <div align="right" tal:define="wtool context/portal_workflow;
                     ext_editor context/portal_properties/site_properties/ext_editor">
      <!-- Available transitions -->
      <tal:wf_transitions condition="python: not 'transitions' in actionsToHide"
                          repeat="transition python: wtool.getTransitionsFor(thisObject)">
        <form style="display: inline;"
              tal:attributes="action python: thisObject.absolute_url() + '/content_status_modify'"
              tal:define="imageName python: transition['title'] + '.png'"
              i18n:domain="plone">
          <input type="hidden" name="workflow_action" tal:attributes="value python: transition['id']" />
          <input type="hidden" name="came_from"
                 tal:attributes="value python: context.REQUEST.get('ACTUAL_URL') + '?' + context.REQUEST.get('QUERY_STRING')" />
          <!-- Icon -->
          <input tal:condition="python: hasattr(thisObject, imageName)" type="image" tal:attributes="src string:${portal_url}/${imageName};
                                              title python: transition['id']"
                 i18n:attributes="title" />
          <!-- Button -->
          <input tal:condition="python: not hasattr(thisObject, imageName)"
                 type="submit" tal:attributes="value python: transition['id'];"
                 i18n:attributes="value"/>
        </form>
      </tal:wf_transitions>

      <!-- Edit action -->
      <tal:edit_action condition="python: member.has_permission('Modify portal content', thisObject)"
                       define="suffix python: test(needExternalEdition and ext_editor,  '/external_edit', '/edit')">
        <a class="noPadding" tal:attributes="href python: thisObject.absolute_url() + suffix">
          <img src="#" tal:attributes="src string:${portal_url}/edit.gif" title="label_edit" i18n:attributes="title" />
        </a>
      </tal:edit_action>

      <!-- Own management of the "delete" action -->
      <tal:delete_action condition="python: member.has_permission('Delete objects', thisObject)">

        <!-- will be used for overlays


    $('.urbanDelete').prepOverlay(
        {
            subtype: 'ajax',
            filter: common_content_filter,
            formselector: '#delete_confirmation',
            noform: function(el) {return $.plonepopups.noformerrorshow(el, 'redirect');},
            redirect: $.plonepopups.redirectbasehref,
            closeselector: '[name=form.button.Cancel]',
            width:'50%'
        }
        );   -->

        <a class="urbanDelete noPadding"  
           tal:attributes="href python: thisObject.absolute_url() + '/delete_confirmation'">
            <!-- Icon -->
            <img src="#" tal:attributes="src string:${portal_url}/delete_icon.gif" i18n:attributes="title" title="label_remove"
                 onClick="javascript:confirmDeleteObject(this)" style="cursor:pointer"/>
        </a>
      </tal:delete_action>
  </div>
</div>

<!-- This macro need to receive a topic -->
<!--We can receive parameters here:
boolean 'showActions' specify if we show the actions column
list 'colsLabels' specify the labels to use in the column.  If nothing is received, we use the elements from showedCols.  This attribute is usefull to rename some labels
list 'showedCols' specify a list of indexes we want to display if these indexes have been defined in the topic/customViewFields-->
<div metal:define-macro="listing" i18n:domain="plone">
<tal:topiccontents define="showActions showActions|nothing;
                           colsLabels colsLabels|nothing;
                           colsLabels python: colsLabels and colsLabels or {};
                           showedCols showedCols|topic/getCustomViewFields;
                           isALot isALot|nothing;
                           isAnEquipment isAnEquipment|nothing;">

    <tal:listing condition="batch">
    <a style='text-align: right' href="#"
        tal:condition="nocall: here/asPDF|nothing"
        tal:attributes="href string:${here_url}/asPDF/atct_topic_pdf_template/atct_topic_pdf"
        i18n:translate="label_download_as_pdf"
        i18n:domain="atcontenttypes">
        Download PDF
    </a>
    <tal:custom>

        <table class="listing"
                summary="Content listing"
                cellpadding="0" cellspacing="0" width="100%"
                i18n:attributes="summary summary_content_listing;">
                <thead i18n:domain="urban">
                <tr>
                    <tal:block repeat="field showedCols">
                     <th i18n:domain="urban" tal:content="python: 'label_colname_' + (colsLabels.has_key(field) and colsLabels[field] or field)" i18n:translate=""/>
                    </tal:block>
                    <th tal:condition="isALot" i18n:domain="urban" i18n:translate="parcels">
                      Parcels
                    </th>
                    <th tal:condition="isAnEquipment" i18n:domain="urban" i18n:translate="launchdate">
                      Launch date
                    </th>
                    <th tal:condition="showActions" i18n:domain="urban" i18n:translate="actions">
                      Actions
                    </th>
                </tr>
                </thead>
                <tbody>
                <tal:brain tal:repeat="obj batch">
                <tr tal:define="oddrow repeat/obj/odd;"
                    tal:attributes="class python:test(oddrow, 'even', 'odd')">
                    <tal:fields repeat="field showedCols"
                                define="url obj/getURL|obj/absolute_url;
                                        obj_type obj/portal_type;
                                        obj_typeinfo python: here.portal_types.getTypeInfo(obj_type);
                                        obj_icon python:plone_view.getIcon(obj);
                                        obj_wf_state obj/review_state|python: context.portal_workflow.getInfoFor(obj, 'review_state', '');
                                        member context/@@plone_portal_state/member;
                                        ploneview nocall: context/@@plone;
                                        normalizeString nocall:ploneview/normalizeString; 
                                        obj_wf_state_class python:'state-' + normalizeString(obj_wf_state);
                                        obj_contenttype_class python:'contenttype-' + obj_type.lower();
                                        title_or_id obj/pretty_title_or_id">
                    <tal:block condition="python: field in showedCols" define="value python: getattr(obj, field, None)">
                        <td tal:condition="python: field not in ['Title', 'Creator', 'name', 'street', ]">
                            <span tal:replace="structure python: here.formatCatalogMetadata(value, long_format=False)">Field value</span>
                        </td>
                        <tal:comment replace="nothing">special case for field 'name' where we display the 'title' that is the name reworked just above</tal:comment>
                        <td tal:condition="python: field == 'name'">
                         <span tal:content="obj/getName">Name</span>
                         <br /><span tal:content="obj/Title" class="discreet">Name reworked</span>
                        </td>
                        <tal:comment replace="nothing">special case for field 'street' where we display the 'adr2' that is the 'streetname' reworked just above</tal:comment>
                        <td tal:condition="python: field == 'street'">
                         <span tal:content="obj/getStreet">Street</span>
                         <br /><span tal:content="obj/getAdr2" class="discreet">Street name reworked</span>
                        </td>
                        <td tal:condition="python: field == 'Creator'">
                         <span tal:content="python: context.portal_membership.getMemberInfo(value) and context.portal_membership.getMemberInfo(value)['fullname'] or value">Creator fullname</span>
                        </td>
                        <td tal:condition="python: field == 'Title'">
                            <span tal:define="global url python: test(obj.portal_type == 'File' and obj.portal_properties.site_properties.ext_editor, url + '/external_edit', url)" />
                            <a href="#" tal:attributes="href url;
                                                        class python: obj_wf_state_class + ' ' + obj_contenttype_class"
                                        tal:content="title_or_id" />

                            <tal:block condition="python: obj.portal_type in ['UrbanEvent', 'UrbanEventInquiry', 'UrbanEventOpinionRequest']">
                             <tal:block define="object obj/getObject;
                                                suffix python: member.has_permission('Modify portal content', object) and '/external_edit' or ''"
                                                repeat="doc object/getDocuments">
                              <br /><a href="#" class="discreet" style="margin-left:20px" tal:content="doc/Title" tal:attributes="href python: doc.absolute_url() + suffix">Document</a>
                             </tal:block>
                            </tal:block>
                            <tal:comment replace="nothing">Show more values for applicants.  This could be the case for other contacts???</tal:comment>
                            <tal:applicant condition="python: obj.meta_type == 'Contact'"
                                           define="obj python: hasattr(obj, 'getObject') and obj.getObject() or obj">
                             <div metal:use-macro="here/urban_macros/macros/displayAddress" />
                             </tal:applicant>
                             <span tal:define="last_key_event python: getattr(obj, 'last_key_event', None)">
                               <span tal:condition="python: last_key_event and last_key_event != 'None'" > 
                                  <br/><span class="discreet" tal:content="last_key_event">Last key Event</span>
                               </span>
                             </span>
                        </td>
                    </tal:block>
                    </tal:fields>
                <td tal:condition="isALot">
                    <tal:block repeat="parcel python: obj.getObject().getParcels()">
                        <span tal:content="parcel/Title" /><br>
                    </tal:block>
                </td>
                <td tal:condition="isAnEquipment">
                    <span tal:content="python: obj.getLaunchDate()" />
                </td>
                <td tal:condition="showActions" tal:define="thisObject python: hasattr(obj, 'getObject') and obj.getObject() or obj; needExternalEdition python: test(obj.portal_type == 'File' and obj.portal_properties.site_properties.ext_editor, True, False)">
                 <div metal:use-macro="here/urban_macros/macros/urbanActionsMacro" />
                </td>
                </tr>
                </tal:brain>
                </tbody>
        </table>
    </tal:custom>

    </tal:listing>

    <p class="discreet"
        tal:condition="python: not batch"
        i18n:domain="urban"
        i18n:translate="urban_no_event_added">
        There are currently no event for this element.
    </p>

    <!-- Navigation -->
    <div metal:use-macro="here/batch_macros/macros/navigation" />

</tal:topiccontents>
</div>

<div metal:define-macro="urbanParcelsMacro" i18n:domain='urban'>
 <table tal:define="member context/@@plone_portal_state/member;" cellspacing=0 cellpadding=0 width=100%>
  <tr>
   <td>
   <div class="#" tal:define="parcels parcels|context/getParcels" tal:attributes="class python: test(parcels, 'field', 'field warning')">
    <div tal:condition="not: parcels" i18n:translate="warning_add_a_parcel">You must encode concerned parcel(s)
    </div>
    <div tal:define="tool python: context.portal_urban;
                     batch python: tool.queryCatalog(batch=True, specificSearch='searchPortionOuts', context=context, theObjects=False, batchlen=50);                     
                     showActions python: True;
                     showedCols python: ('Title',);">
     <metal:listing use-macro="here/urban_macros/macros/listing" />
    </div>
     <form tal:condition="python: member.has_permission('urban: Add PortionOut', context)" name="quickAdd" tal:attributes="action python: context.absolute_url() + '/searchparcels'" action="searchparcels" method="post">
      <input type="submit" class="contenttype-portionout button-portionout" id="addPortionOut" value="search_parcels" i18n:attributes="value" />
     </form>
   </div>
  </td>
 </tr>
 </table>
</div>

<metal:edit define-macro="editDefaultMacro"
               tal:define="member context/@@plone_portal_state/member; 
                       border python: test(member.has_role('Manager'), 'enable_border', 'disable_border');
                       dummy python:request.set(border, 1);
                       putils context/plone_utils;">

      <tal:fieldsets repeat="fieldset python: ['default',]">
        <fieldset class="urbanEditWithTabbing" tal:define="fieldsetid python:putils.normalizeString(fieldset)"
                tal:attributes="id string:fieldset-${fieldsetid}">
          <legend id="#"
                  tal:content="python: view.getTranslatedSchemaLabel(fieldset)"
                  tal:attributes="id string:fieldsetlegend-${fieldsetid}"
                  i18n:translate="" />
          <tal:fields repeat="field python:schematas[fieldset].editableFields(here, visible_only=True)">
           <metal:fieldMacro use-macro="python:here.widget(field.getName(), mode='edit')" />
          </tal:fields>
        </fieldset>
      </tal:fieldsets>
</metal:edit>

<div metal:define-macro="editLicenceFieldsNoTabbingMacro" i18n:domain="urban">
<tal:fieldsets repeat="fieldset python: ['urban_description', 'urban_road', 'urban_location', 'urban_investigation_and_advices', 'urban_peb']">
  <fieldset>
    <legend tal:content="python: view.getTranslatedSchemaLabel(fieldset)"
            i18n:translate="" />
      <metal:listing use-macro="here/urban_macros/macros/editLicenceFieldsMacro" />
  </fieldset>
</tal:fieldsets>
</div>

<metal:editLicenceMacro define-macro="editLicenceMacro" i18n:domain="urban" tal:define="useTabbing python: context.portal_urban.getUseTabbing();">
   <div tal:condition="not: useTabbing">
       <metal:listing use-macro="here/urban_macros/macros/editLicenceFieldsNoTabbingMacro" />
   </div>
   
   <tal:with_tabbing condition="useTabbing">
       <metal:listing use-macro="here/urban_macros/macros/editLicenceFieldsWithTabbingMacro" />
   </tal:with_tabbing>
</metal:editLicenceMacro>

<metal:editLicenceFieldsWithTabbingMacro define-macro="editLicenceFieldsWithTabbingMacro"
                                         i18n:domain="urban"
                                         tal:define="putils context/plone_utils;">
<tal:fieldsets repeat="fieldset context/schemata_order">
  <fieldset class="urbanEditWithTabbing" tal:define="fieldsetid python:putils.normalizeString(fieldset)"
          tal:attributes="id string:fieldset-${fieldsetid}">
    <legend id="#"
            tal:content="python: view.getTranslatedSchemaLabel(fieldset)"
            tal:attributes="id string:fieldsetlegend-${fieldsetid}"
            i18n:translate="" />
      <metal:listing use-macro="here/urban_macros/macros/editLicenceFieldsMacro" />
  </fieldset>
</tal:fieldsets>
</metal:editLicenceFieldsWithTabbingMacro>

<div metal:define-macro="editLicenceFieldsMacro" i18n:domain="urban">
 <tal:fields repeat="field python:schematas[fieldset].editableFields(here, visible_only=True)">
  <tal:block define="fieldName field/getName">

   <tal:comment replace="nothing">Display a fieldset around the 'isInPca' and 'Pca' fields</tal:comment>
   <tal:pca condition="python: fieldName in ['isInPCA', 'pca',]">
    <tal:comment replace="nothing">We do the entire job manually when the field is 'isInPca' and there is nothing left to do when it is the 'Pca' field</tal:comment>
    <tal:manage_pca condition="python: fieldName == 'isInPCA'">
     <fieldset class="urban-fieldset-masterbooleanwidget" style="border-style: solid !important;">
      <legend i18n:translate="pca_fieldset_legend">PCA</legend>
      <metal:fieldMacro use-macro="python:here.widget('isInPCA', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('pca', mode='edit')" />
     </fieldset>
    </tal:manage_pca>
   </tal:pca>

   <tal:comment replace="nothing">Display a fieldset around the 'isInSubdivision' and 'subdivisionDetails' fields</tal:comment>
   <tal:subdivision condition="python: fieldName in ['isInSubdivision', 'parcellings', 'subdivisionDetails',]">
    <tal:comment replace="nothing">We do the entire job manually when the field is 'isInSubdivision' and there is nothing left to do when it is the 'subdivisionDetails' field</tal:comment>
    <tal:manage_subdivision condition="python: fieldName == 'isInSubdivision'">
     <fieldset class="urban-fieldset-masterbooleanwidget" style="border-style: solid !important;">
      <legend i18n:translate="subdivision_fieldset_legend">Subdivision</legend>
      <metal:fieldMacro use-macro="python:here.widget('isInSubdivision', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('parcellings', mode='edit')" />
      <metal:fieldMacro use-macro="python:here.widget('subdivisionDetails', mode='edit')" />
     </fieldset>
    </tal:manage_subdivision>
   </tal:subdivision>

   <tal:other condition="not: python: fieldName in ['isInPCA', 'pca', 'isInSubdivision', 'parcellings', 'subdivisionDetails',]">
    <metal:fieldMacro use-macro="python:here.widget(field.getName(), mode='edit')" />
   </tal:other>
 </tal:block>
 </tal:fields>
</div>

<metal:displayAddress define-macro="displayAddress">
  <tal:block condition="obj/getStreet"><br /></tal:block>
  <span tal:replace="python: obj.getStreet()+' '+obj.getNumber()" /><br />
  <span tal:replace="python: obj.getZipcode()+' '+obj.getCity()" />
</metal:displayAddress>

<metal:titleWithIcon define-macro="titleWithIcon">
 <h1 class="documentFirstHeading">
  <img src="#" tal:attributes="src string:${context/@@plone_portal_state/portal_url}/${context/portal_type}.png" />
  <span tal:replace="here/Title" tal:omit-tag="">Title</span>
 </h1>
</metal:titleWithIcon>
