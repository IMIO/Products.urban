<configure
    xmlns="http://namespaces.zope.org/zope"
    i18n_domain="Products.urban">

    <!-- folder complete conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.ComplementsAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <!-- acknowlegdment conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.AcknowledgmentDoneCondition"
        name="urban.schedule.condition.acknowledgment_done"
    />

    <!-- inquiry conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.NoInquiryCondition"
        name="urban.schedule.condition.no_inquiry"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.InquiryDoneCondition"
        name="urban.schedule.condition.inquiry_done"
    />

    <!-- opinion requests conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.HasOpinionRequests"
        name="urban.schedule.condition.has_opinion_requests"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.OpinionRequestsDone"
        name="urban.schedule.condition.opinion_requests_done"
    />

    <!-- decision college event conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.LicenceDecisionCollegeEventCreated"
        name="urban.schedule.condition.licence_decision_college_event_created"
    />

</configure>
