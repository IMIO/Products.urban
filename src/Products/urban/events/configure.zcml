<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:five="http://namespaces.zope.org/five"
           xmlns:i18n="http://namespaces.zope.org/i18n"
           i18n_domain="urban">

  <subscriber for="..interfaces.IUrbanEventOpinionRequest
                   zope.lifecycleevent.interfaces.IObjectCreatedEvent"
              handler=".opinionRequestEvents.setDefaultLinkedInquiry" />

  <subscriber for="..interfaces.IContact
                   zope.lifecycleevent.interfaces.IObjectCreatedEvent"
              handler=".contactEvents.setInterface" />

  <subscriber for="..interfaces.IContact
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".contactEvents.updateLicenceTitle" />

  <subscriber for="..interfaces.IContact
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".contactEvents.sortByAlphabeticalOrder" />

  <subscriber for="..interfaces.IInquiry
                   Products.Archetypes.interfaces.IEditBegunEvent"
              handler=".inquiryEvents.setDefaultValuesEvent"/>

  <subscriber for="..interfaces.IInquiry
                   OFS.interfaces.IObjectWillBeRemovedEvent"
              handler=".inquiryEvents.beforeDelete" />

  <subscriber for="..interfaces.IInquiry
                   zope.container.interfaces.IObjectRemovedEvent"
              handler=".inquiryEvents.afterDelete" />

  <subscriber for="..interfaces.IInquiry
                   zope.lifecycleevent.interfaces.IObjectCreatedEvent"
              handler=".inquiryEvents.setGeneratedTitle" />

  <subscriber for="..interfaces.IGenericLicence
                   zope.lifecycleevent.interfaces.IObjectCreatedEvent"
              handler=".licenceEvents.setDefaultValuesEvent"/>

  <subscriber for="..interfaces.IGenericLicence
                   Products.Archetypes.interfaces.IObjectInitializedEvent"
              handler=".licenceEvents.postCreationActions"/>

  <subscriber for="..interfaces.ICODT_UniqueLicence
                   Products.Archetypes.interfaces.IObjectInitializedEvent"
              handler=".codt_uniquelicence_events.UniqueLicencePostCreationActions"/>

  <subscriber for="..interfaces.IGenericLicence
                   zope.lifecycleevent.IObjectModifiedEvent"
              handler=".licenceEvents.updateLicenceTitle"/>

  <subscriber for="..interfaces.IGenericLicence
                   zope.lifecycleevent.IObjectModifiedEvent"
              handler=".licenceEvents.updateEventsFoldermanager"/>

  <subscriber for="..interfaces.IGenericLicence
                   zope.lifecycleevent.IObjectCreatedEvent"
              handler=".licenceEvents.setMarkerInterface"/>

  <subscriber for="..interfaces.IGenericLicence
                   Products.DCWorkflow.interfaces.IAfterTransitionEvent"
              handler=".licenceEvents.reindex_attachments_permissions" />

  <subscriber for="..interfaces.IGenericLicence
                   Products.DCWorkflow.interfaces.IAfterTransitionEvent"
              handler=".licenceEvents.close_all_tasks" />

  <subscriber for="..interfaces.IUrbanEvent
                   Products.DCWorkflow.interfaces.IAfterTransitionEvent"
              handler=".licenceEvents.reindex_attachments_permissions" />

  <subscriber for="..interfaces.IPortionOut
                   zope.container.interfaces.IObjectRemovedEvent"
              handler=".portionOutEvents.onDelete" />

  <subscriber for="..interfaces.IPortionOut
                   zope.lifecycleevent.interfaces.IObjectCreatedEvent"
               handler=".portionOutEvents.set_ILicencePortionOut_interface" />

  <subscriber for="..interfaces.IPortionOut
                   Products.Archetypes.interfaces.IObjectInitializedEvent"
               handler=".portionOutEvents.setValidParcel" />

  <subscriber for="..interfaces.IPortionOut
                   Products.Archetypes.interfaces.IObjectInitializedEvent"
              handler=".portionOutEvents.setDivisionCode" />

  <subscriber for="..interfaces.IPortionOut
                   Products.Archetypes.interfaces.IObjectEditedEvent"
              handler=".portionOutEvents.setValidParcel" />

  <subscriber for="..interfaces.IPortionOut
                   Products.Archetypes.interfaces.IObjectEditedEvent"
              handler=".portionOutEvents.setDivisionCode" />

  <subscriber for="..interfaces.IUrbanEvent
                   Products.Archetypes.interfaces.IObjectInitializedEvent"
              handler=".urbanEventEvents.setDefaultValuesEvent"/>

  <subscriber for="..interfaces.IUrbanEvent
                   Products.Archetypes.interfaces.IObjectInitializedEvent"
              handler=".urbanEventEvents.setEventTypeType"/>

  <subscriber for="..interfaces.IUrbanEvent
                   Products.Archetypes.interfaces.IObjectInitializedEvent"
              handler=".urbanEventEvents.setCreationDate"/>

  <subscriber for="..interfaces.IUrbanEvent
                   zope.lifecycleevent.interfaces.IObjectCreatedEvent"
              handler=".urbanEventEvents.generateSingletonDocument"/>

  <subscriber for="..interfaces.IUrbanEvent
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".urbanEventEvents.updateKeyEvent"/>

  <subscriber for="..interfaces.IUrbanEvent
                   zope.lifecycleevent.interfaces.IObjectRemovedEvent"
              handler=".urbanEventEvents.updateKeyEvent" />

  <subscriber for="..interfaces.IUrbanEvent
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".urbanEventEvents.updateDecisionDate" />

  <subscriber for="..interfaces.IUrbanEventInquiry
                   zope.lifecycleevent.interfaces.IObjectCreatedEvent"
              handler=".urbanEventInquiryEvents.setLinkedInquiry" />

  <subscriber for="..interfaces.IUrbanEventAnnouncement
                   zope.lifecycleevent.interfaces.IObjectCreatedEvent"
              handler=".urbanEventInquiryEvents.setLinkedAnnouncement" />

  <subscriber for="..interfaces.IUrbanEventType
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".urbanEventTypesEvents.updateKeyEvent" />

  <subscriber for="..interfaces.IUrbanEventType
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".urbanEventTypesEvents.updateEventType" />

  <subscriber for="..interfaces.IUrbanEventType
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".urbanEventTypesEvents.forceEventTypeCollege" />

  <subscriber for="..interfaces.IEnvironmentRubricTerm
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".rubricTermEvents.updateTitle" />

  <subscriber for="..interfaces.IEnvironmentBase
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".envclassEvents.update_history"/>

  <subscriber for="..interfaces.IUniqueLicence
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".envclassEvents.update_history"/>

  <subscriber for="..interfaces.IEnvironmentBase
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".environmentLicenceEvents.setExploitationConditions"/>

  <subscriber for="..interfaces.IPortionOut
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".parcelEvents.updateParcellingTitle" />

  <subscriber for="..interfaces.IParcellingTerm
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".parcellingtermEvents.updateTitle" />

  <subscriber for="..interfaces.IPcaTerm
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".PcaTermEvents.updateTitle" />

  <subscriber for="..interfaces.IUrbanEvent
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".urbanEventEvents.notifyLicence" />

  <subscriber for="..interfaces.IUrbanEvent
                   Products.DCWorkflow.interfaces.IAfterTransitionEvent"
              handler=".urbanEventEvents.notifyLicence" />

  <subscriber for="..interfaces.IExplosivesPossession
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".explosive_possessions.update_reference" />

  <subscriber for="..interfaces.IRoadDecree
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".road_decree.update_reference" />

  <subscriber for="..interfaces.IInspection
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".inspectionEvents.setInspectionBoundLicence" />

  <!-- do this to update schedule tasks when sending a college event to PM -->
  <subscriber for="..interfaces.IUrbanEvent
                   imio.pm.wsclient.interfaces.ISentToPMEvent"
              handler=".urbanEventEvents.notifyLicence" />

  <subscriber for="imio.dashboard.interfaces.IDashboardCollection
                   zope.lifecycleevent.interfaces.IObjectCreatedEvent"
              handler=".dashboard_collection.set_dashboard_columns" />

  <subscriber for="..interfaces.IUrbanConfigurationValue
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".configuration_events.update_vocabulary_term_cache" />

  <subscriber for="..interfaces.IUrbanConfigurationFolder
                   zope.lifecycleevent.interfaces.IObjectModifiedEvent"
              handler=".configuration_events.update_vocabulary_folder_cache" />


</configure>
